# 3. В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
# Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.
import re
txt = 'История Южной Кореи начинается с советско-американского соглашения в конце лета 1945 года \
о разделении сфер влияния на полуострове. По этому договору, часть Кореи южнее 38 параллели переходила \
под юрисдикцию США, северная же — под юрисдикцию Советского Союза. В истории страны чередовались периоды \
демократического и авторитарного управления. Гражданские правительства в стране пронумерованы от Первой Республики \
Ли Сын Мана до нынешней Шестой Республики. Первая Республика, демократическая в начале, становилась всё более \
автократической вплоть до своего окончания в 1960 году. Вторая Республика основывалась на демократических принципах, \
но была свергнута менее чем за год, после чего в стране появилось военное правительство. Третья, Четвёртая и Пятая \
Республики номинально считались демократическими, однако считается, что они были продолжением военного управления. \
С установлением Шестой Республики управление страной вновь вернулось на демократические рельсы.'
words = txt.split()


def get_clean_word(word: str) -> str:
    word = word.lower()
    word = re.sub('[^a-zа-яё0-9]', '', word, flags=re.IGNORECASE)
    word = word.strip('-')
    return word


all_list = [get_clean_word(word) for word in words]


def words_counter(text: str) -> list[str]:
    count_words = {}
    LIMIT = 10
    sorted_dictionary = {}
    lst_words = all_list
    for word in lst_words:
        counter = lst_words.count(word)
        count_words[word] = counter
    sorted_values = sorted(count_words.values())[::-1]
    for i in sorted_values:
        for k in count_words.keys():
            if count_words[k] == i:
                sorted_dictionary[k] = count_words[k]
    return list(sorted_dictionary.items())[0: LIMIT]


print(words_counter(txt))

